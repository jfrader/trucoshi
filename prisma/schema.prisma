// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  accountId    Int           @unique
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  match        Match[]
  matchPlayers MatchPlayer[]
  stats        UserStats?
}

model UserStats {
  id        Int  @id @default(autoincrement())
  user      User @relation(fields: [userId], references: [id])
  userId    Int  @unique
  accountId Int  @unique
  win       Int  @default(0)
  loss      Int  @default(0)
  satsBet   Int  @default(0)
  satsWon   Int  @default(0)
  satsLost  Int  @default(0)
}

model Match {
  id             Int           @id @default(autoincrement())
  state          EMatchState   @default(UNREADY)
  owner          User          @relation(fields: [ownerId], references: [id])
  ownerId        Int
  ownerAccountId Int
  options        Json          @default("{}")
  results        Json          @default("{ \"0\": { \"buenas\": 0, \"malas\": 0 },\"1\": { \"buenas\": 0, \"malas\": 0 } }")
  players        MatchPlayer[]
  hands          MatchHand[]
  bet            MatchBet?
}

model MatchBet {
  id             Int     @id @default(autoincrement())
  match          Match   @relation(fields: [matchId], references: [id])
  matchId        Int     @unique
  satsPerPlayer  Int
  allPlayersPaid Boolean
  winnerAwarded  Boolean
}

model MatchHand {
  id        Int   @id @default(autoincrement())
  idx       Int
  rounds    Json  @default("[[]]")
  results   Json  @default("{ \"0\": { \"buenas\": 0, \"malas\": 0 },\"1\": { \"buenas\": 0, \"malas\": 0 } }")
  matchId   Int
  match     Match @relation(fields: [matchId], references: [id])
  winnerIdx Int
}

model MatchPlayer {
  id           Int   @id @default(autoincrement())
  user         User  @relation(fields: [userId], references: [id])
  userId       Int   @unique
  accountId    Int
  teamIdx      Int
  satsPaid     Int   @default(0)
  satsReceived Int   @default(0)
  payRequestId Int
  matchId      Int
  match        Match @relation(fields: [matchId], references: [id])
}

enum EMatchState {
  UNREADY
  READY
  STARTED
  FINISHED
}
